extends layout

block content  
  script(src="../javascripts/phaser.min.js")
  
  script(src="../javascripts/src/boot.js")
  script(src="../javascripts/src/bootDealer.js")
  script(src="../javascripts/src/preload.js")
  script(src="../javascripts/src/preloadDealer.js")
  script(src="../javascripts/src/gameTitle.js") 
  script(src="../javascripts/src/gameTitleDealer.js")
  script(src="../javascripts/src/loteria.js")
  script(src="../javascripts/src/loteriaDealer.js")
  script(src="../javascripts/src/gameOver.js")
  script(src="../javascripts/src/gameOverDealer.js")
  script.
    var gameID = "#{gameID}";
    var dealer = "#{dealer}";
    var nickname = "#{nickname}";
    var boardLayout = "#{boardLayout}";
    
    console.log("On jade (gameID) " + gameID);
    console.log("On jade (nickname) " + nickname);
    console.log("On jade (dealer) " + dealer);
    var gameDealer = new Phaser.Game(300, 500, Phaser.AUTO, "gameDealer");
    var gameLoteria = new Phaser.Game(770, 1300, Phaser.AUTO, "gameLoteria");
    gameLoteria.state.add("Boot", boot);
    gameDealer.state.add("BootDealer", bootDealer);
    gameLoteria.state.add("Preload", preload);
    gameDealer.state.add("PreloadDealer", preloadDealer);
    gameLoteria.state.add("GameTitle", gameTitle);
    gameDealer.state.add("GameTitleDealer", gameTitleDealer);
    
    

    var deckSize = 0;
    var turn = 0;
    var cardsDealt = [];
    var cardNumber = 0;
    
    gameDealer.state.add("LoteriaDealer", loteriaDealer); 
    gameLoteria.state.add("Loteria", loteria); 
    nextCard();
    var gameBoard = generateBoard(boardLayout);
    var imageBoard = imageBoardFrom(gameBoard);
    gameLoteria.state.start("Boot");
    gameDealer.state.start("BootDealer");
    gameLoteria.state.add("GameOver", gameOver);
    gameDealer.state.add("GameOverDealer", gameOverDealer);
    

  function shuffleDeck(deck) {
  var size = deck.length;
  var output = deck;
  // every card, swap to a random spot
  for (var i = 0; i < size; i++) {
    var temp = output[i];
    var random = ((Math.floor(Math.random() * 100)) % size); // 0 - (deckSize-1)

    // swap values
    output[i] = output[random];
    output[random] = temp;
  }
  return output;
}

function generateDeck(size) {
  var deck = [];
  for(var i = 1; i <= size; i++) {
    deck.push(i);
  }
  deck = shuffleDeck(deck);
  return deck;
}

var deck = generateDeck(54);

    function imageBoardFrom(board) {
      var output = [];
      var size = board.length;
      var i = 0;
      while (i < 16) {
        //- if (size == 8 && ![0,3,5,6,9,10,12,15].includes(i)) {
          // fill in with blank
          //- output.push('-');
        //- } else {
          output.push('card_' + board[i] + '.png');
          i++;
        //- }
        
      }
      console.log("imageboard: " + output);
      return output;
    }
    function nextCard() {
      console.log("next card");
      turn ++;
      cardNumber = deck[turn];
      cardsDealt.push(cardNumber);
      console.log('turn: ' + turn);
      console.log('cardnumber: ' + cardNumber);
      }
    
    function generateBoard(layout) {
      var output = [];
      var random = 0;
      var size = 0;
      size = 16;
      for (var i = 0; i < size; i++) {
        do {
          random = ((Math.floor(Math.random() * 100)) % 54) + 1 ; // 1 -> (size)
        } while (output.includes(random));
        output.push(random);
      }
      
      console.log('board output: ' + output);
      return output;
    };
  
  div(id="gameDealer" class="vertical-center") 
      h1 Baraja 
      button(onclick="nextCard()" class="btn btn-default btn-block") Siguiente Carta

  div(id="gameLoteria" class="vertical-center") 
      h1 Tablero 